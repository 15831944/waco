// LiftList.h: interface for the LiftList class.
//
//	© Waco Kwikform Limited
//	ACN 002 835 36
//	P.O. Box 15 Rydalmere NSW 2116
//
//	All rights reserved. No part of this work covered by copyright
//	may be reproduced or copied in anyform or by any means (graphic,
//	electronic or mechanical, including photocopying, recording,
//	recording taping or information retrieval system) without the
//	written permission of Waco Kwikform Limited.
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_LIFTLIST_H__0D0C4493_42F9_11D3_8A5E_00508B043A6C__INCLUDED_)
#define AFX_LIFTLIST_H__0D0C4493_42F9_11D3_8A5E_00508B043A6C__INCLUDED_

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//			LIFT LIST ELEMENT CLASS / LIFT LIST CLASS
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//	Last Changed By : $Author: Jsb $
//	Last Revision	: $Date: 19/05/00 12:03p $
//	Version			: $Revision: 19 $
///////////////////////////////////////////////////////////////////////////////

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//////////////////////////////////////////////////////////////////////
////////////////////// INCLUDES ///////////////////////////////
#include "MeccanoDefinitions.h"
#include "Lift.h"

class LiftDetailsDialog;

///////////////////////////////////////////////////////////////////////////////
//					LIFT LIST ELEMENT CLASS 
class LiftListElement  
{
public:
	////////////////////
	////////////////////
	////Functionality///
	////////////////////
	////////////////////

	/////////////////////////////////////////////////////////////////////////////////
	//construction/destruction
	/////////////////////////////////////////////////////////////////////////////////

	LiftListElement();
	LiftListElement(Lift *pLift, double dRL);
	virtual ~LiftListElement();

	////////////////////
	////////////////////
	/////Attributes/////
	////////////////////
	////////////////////
	double	 m_dRL;
	Lift	*m_pLift;
};


///////////////////////////////////////////////////////////////////////////////
//					LIFT LIST CLASS 
class LiftList  : protected CArray<LiftListElement*, LiftListElement*> 
{
public:
	void SetAt( int iLiftID, LiftListElement *pElement );
	LiftListElement * GetAt( int iLiftID ) const;
	void SetRLsForAllLifts( double dRLBottomLift );
	void DeleteLiftDetailsDialog();
	void DestroyLiftDetailsDialog();
	void SetRL( int iLiftID, double dRL );
	////////////////////
	////////////////////
	////Functionality///
	////////////////////
	////////////////////

	/////////////////////////////////////////////////////////////////////////////////
	//construction/destruction
	/////////////////////////////////////////////////////////////////////////////////
	LiftList();
	virtual ~LiftList();

	/////////////////////////////////////////////////////////////////////////////////
	//list addition functions
	/////////////////////////////////////////////////////////////////////////////////
	bool InsertLift(Lift *pLift, double dRL, int iLiftID);
	int	AddLift(Lift *pLift, double dRL);

	/////////////////////////////////////////////////////////////////////////////////
	//list removal functions
	/////////////////////////////////////////////////////////////////////////////////
	void DeleteAll();
	void RemoveAt(int nIndex, int nCount =1);

	int GetSize() const;
	int GetID(Lift *pLift) const;
	Lift *GetLift(int iLiftID) const;
	double GetRL(int iLiftID) const;
	
	LiftList &operator=(const LiftList &Original);

	int DisplayLiftDetailsDialog(CWnd *pParent);
	void Test();

protected:
	LiftDetailsDialog * m_pLiftDetailsDialog;
};

#endif // !defined(AFX_LIFTLIST_H__0D0C4493_42F9_11D3_8A5E_00508B043A6C__INCLUDED_)
